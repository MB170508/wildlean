local players = game:GetService("Players")
local local_player = players.LocalPlayer
local mouse = local_player:GetMouse()
local user_input_service = game:GetService("UserInputService")
local current_camera = game:GetService("Workspace").CurrentCamera

local global_module = require(game:GetService("ReplicatedStorage").SharedModules.Global)

local hitboxes = {"Head", "HumanoidRootPart", "LowerTorso", "UpperTorso"}
local field_of_view = 150

-- Circle UI
local circle = Drawing.new("Circle")
circle.Visible = true
circle.Radius = field_of_view
circle.Filled = false
circle.Thickness = 1.2
circle.Color = Color3.new(176, 42, 88)
circle.Position = Vector2.new(current_camera.ViewportSize.x / 2, current_camera.ViewportSize.y / 2)

-- Slider UI
local slider = Instance.new("Frame")
slider.Size = UDim2.new(0, 200, 0, 20)
slider.Position = UDim2.new(0.5, -100, 0.5, -10)
slider.AnchorPoint = Vector2.new(0.5, 0.5)
slider.BackgroundColor3 = Color3.new(1, 1, 1)
slider.BackgroundTransparency = 0.5
slider.BorderSizePixel = 0
slider.Selectable = true
slider.Draggable = true

local slider_label = Instance.new("TextLabel")
slider_label.Size = UDim2.new(1, 0, 1, 0)
slider_label.BackgroundTransparency = 1
slider_label.Text = "Field of View"
slider_label.TextSize = 14
slider_label.TextColor3 = Color3.new(1, 1, 1)
slider_label.TextXAlignment = Enum.TextXAlignment.Left
slider_label.Font = Enum.Font.SourceSansBold
slider_label.Parent = slider

local slider_value_label = Instance.new("TextLabel")
slider_value_label.Size = UDim2.new(0, 50, 1, 0)
slider_value_label.Position = UDim2.new(1, -50, 0, 0)
slider_value_label.BackgroundTransparency = 1
slider_value_label.Text = tostring(field_of_view)
slider_value_label.TextSize = 14
slider_value_label.TextColor3 = Color3.new(1, 1, 1)
slider_value_label.TextXAlignment = Enum.TextXAlignment.Right
slider_value_label.Font = Enum.Font.SourceSansBold
slider_value_label.Parent = slider

-- Functions
local function closest_to_cursor(hitboxes)
    local target, part = nil, nil
    local max_distance, max_part_distance = math.huge, math.huge
    if not next(hitboxes) then
        return
    end
    for i, v in next, players:GetPlayers() do
        if v ~= local_player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
            local position, on_screen = current_camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
            local distance = (Vector2.new(position.x, position.y) - Vector2.new(mouse.x, mouse.y)).Magnitude
            if distance < max_distance then
                target, max_distance = v, distance
            end
        end
    end
    if target then
        for i, v in next, target.Character:GetChildren() do
            if table.find(hitboxes, v.Name) then
                local world_to_screen, on_screen = current_camera:WorldToScreenPoint(v.Position)
                local distance
